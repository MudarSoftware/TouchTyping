package touchtyping;

import javax.swing.text.*;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.BadLocationException;
import javax.swing.text.StyleConstants;
import org.jfree.ui.RefineryUtilities;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Che
 */
public class MainWindow extends javax.swing.JFrame implements DocumentListener {

    /**
     * Creates new form MainWindow
     */
    int keystrok = 0;
    String words = "";
    String textEnterd ;
    String tmpText ;
    String worldlength="";
    StyleContext sc = new StyleContext();
    Style cwStyle = sc.addStyle("ConstantWidth", null);
    DefaultStyledDocument doc = new DefaultStyledDocument(sc);
    FileOperations fo;
    String fileName="";
    Document userdoc ;
    Settings setting;
    User activeuser;
    long timeStart=0;
    long timeEnd=0;
    public MainWindow(User user) throws IOException, FileNotFoundException, ClassNotFoundException {
        try {
            
            this.activeuser=user;
            this.setting=readSettingsFromFile(activeuser.getUserName());
            System.out.println(setting.Background.toString());
            initComponents();
            ImageIcon icon= new ImageIcon("icon.png");
            this.setIconImage(icon.getImage());
            txtProgram.setBackground(setting.getBackground());
            txtuser.setBackground(setting.getBackground());
            this.setTitle("TouchTyping User: ( "+activeuser.userName+" )");
            fo=new FileOperations();
            fo.setFileName(this.setting.TriningFile);
            words=fo.getWords();
            doc.insertString(0, words, null);
            txtProgram.setDocument(doc);
            txtuser.getDocument().addDocumentListener(this);
            userdoc=txtuser.getDocument();
            Prgbarr.setMinimum(0);
            Prgbarr.setMaximum(words.length());
            txtuser.requestFocus();           
        } catch (BadLocationException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtProgram = new javax.swing.JTextPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtuser = new javax.swing.JTextPane();
        jPanel3 = new javax.swing.JPanel();
        lable2 = new javax.swing.JLabel();
        lblwpm = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblkeystrok = new javax.swing.JLabel();
        lable = new javax.swing.JLabel();
        lblwordsNumber = new javax.swing.JLabel();
        lable1 = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        Prgbarr = new javax.swing.JProgressBar();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuNew = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItemSetting = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItemUserStatistics = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItemAbout = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Touch Typing");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtProgram.setEditable(false);
        txtProgram.setFont(new java.awt.Font("Sylfaen", 0, 24)); // NOI18N
        txtProgram.setText("Hello World");
        jScrollPane4.setViewportView(txtProgram);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 709, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtuser.setFont(new java.awt.Font("Sylfaen", 0, 24)); // NOI18N
        txtuser.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtuserInputMethodTextChanged(evt);
            }
        });
        txtuser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtuserKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtuserKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtuserKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtuser);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lable2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lable2.setText("WPM: ");

        lblwpm.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblwpm.setText("0");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("key strok:");

        lblkeystrok.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblkeystrok.setText("0");

        lable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lable.setText("Words Number: ");

        lblwordsNumber.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblwordsNumber.setText("0");

        lable1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lable1.setText("Time: ");

        lblTime.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTime.setText("0");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblwordsNumber)
                .addGap(92, 92, 92)
                .addComponent(lable1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTime)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblkeystrok)
                .addGap(127, 127, 127)
                .addComponent(lable2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblwpm)
                .addGap(55, 55, 55))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lable1)
                        .addComponent(lblTime))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lable2)
                        .addComponent(lblwpm)
                        .addComponent(jLabel1)
                        .addComponent(lblkeystrok)
                        .addComponent(lable)
                        .addComponent(lblwordsNumber)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Prgbarr.setForeground(new java.awt.Color(0, 205, 40));
        Prgbarr.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jMenu1.setText("File");

        jMenuNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        jMenuNew.setText("New");
        jMenuNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuNewActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuNew);
        jMenu1.add(jSeparator1);

        jMenuItemSetting.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItemSetting.setText("Setting");
        jMenuItemSetting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSettingActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemSetting);
        jMenu1.add(jSeparator2);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("View");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setText("Speed Chart");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);
        jMenu2.add(jSeparator3);

        jMenuItemUserStatistics.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItemUserStatistics.setText("User statistics");
        jMenuItemUserStatistics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemUserStatisticsActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemUserStatistics);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Help");

        jMenuItemAbout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItemAbout.setText("About");
        jMenuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAboutActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItemAbout);
        jMenu3.add(jSeparator4);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Prgbarr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Prgbarr, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtuserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtuserKeyReleased

    }//GEN-LAST:event_txtuserKeyReleased

    private void txtuserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtuserKeyTyped

    }//GEN-LAST:event_txtuserKeyTyped

    private void txtuserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtuserKeyPressed

    }//GEN-LAST:event_txtuserKeyPressed

    private void txtuserInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtuserInputMethodTextChanged

    }//GEN-LAST:event_txtuserInputMethodTextChanged

    private void jMenuNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuNewActionPerformed
        try {
            // Reset values for new test and get a new words
            ResetItem();
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuNewActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try 
        {
           if(activeuser.getUserSpeeds()!=null)
           {
                if(activeuser.getUserSpeeds().size()>10)
                    RefineryUtilities.centerFrameOnScreen(activeuser.getUserChart());
                else
                    JOptionPane.showMessageDialog(rootPane,"You have to take more than 10 test to view chart");
           }else
             {JOptionPane.showMessageDialog(rootPane,"You have to take more than 10 test to view chart");}
        } catch (IOException ex)
             {
                 Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
             }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItemSettingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSettingActionPerformed

        try {
            settingJDialogWindow settingwindow=new settingJDialogWindow(this, rootPaneCheckingEnabled);
            RefineryUtilities.centerFrameOnScreen( settingwindow);
            settingwindow.setVisible(true);
            this.activeuser.userSettings=settingwindow.getSettings();
            this.activeuser.userSettings.saveSetting(this.activeuser.userName);
            fo.fileName=activeuser.getUserSettings().TriningFile;
            txtProgram.setBackground(activeuser.getUserSettings().getBackground());
            txtuser.setBackground(activeuser.getUserSettings().getBackground());
            
            
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemSettingActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItemUserStatisticsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemUserStatisticsActionPerformed
        try {
            // TODO add your handling code here:
            StatisticsWindow sw=new StatisticsWindow(this, rootPaneCheckingEnabled,this.activeuser);
            RefineryUtilities.centerFrameOnScreen( sw);
            sw.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemUserStatisticsActionPerformed

    private void jMenuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAboutActionPerformed
        // TODO add your handling code here:
        AboutWindow aw=new AboutWindow(this, rootPaneCheckingEnabled);
        RefineryUtilities.centerFrameOnScreen( aw);
        aw.setVisible(true);
    }//GEN-LAST:event_jMenuItemAboutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new MainWindow(activeuser).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar Prgbarr;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItemAbout;
    private javax.swing.JMenuItem jMenuItemSetting;
    private javax.swing.JMenuItem jMenuItemUserStatistics;
    private javax.swing.JMenuItem jMenuNew;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JLabel lable;
    private javax.swing.JLabel lable1;
    private javax.swing.JLabel lable2;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblkeystrok;
    private javax.swing.JLabel lblwordsNumber;
    private javax.swing.JLabel lblwpm;
    private javax.swing.JTextPane txtProgram;
    private javax.swing.JTextPane txtuser;
    // End of variables declaration//GEN-END:variables

    @Override
    public void insertUpdate(DocumentEvent e) {
        if(timeStart==0)
        {
            timeStart=System.currentTimeMillis()/1000;
            
        }
        if (txtProgram.getText().length() >= txtuser.getText().length()) 
        {
            textEnterd = txtuser.getText().substring(txtuser.getCaretPosition(),txtuser.getCaretPosition()+1);
            tmpText = txtProgram.getText().substring(txtuser.getCaretPosition(), txtuser.getCaretPosition()+1);
            if (textEnterd.equals(tmpText)) {
                worldlength+=textEnterd;
                StyleConstants.setForeground(cwStyle, Color.GREEN.darker());
                doc.setCharacterAttributes(txtuser.getCaretPosition(),1, cwStyle, false);
                keystrok=worldlength.length();
                lblkeystrok.setText(keystrok+"");
                Prgbarr.setValue(keystrok);
            } else if (!textEnterd.equals(tmpText)) {
                StyleConstants.setForeground(cwStyle, Color.red);
                doc.setCharacterAttributes(txtuser.getCaretPosition(),1, cwStyle, false);               
            }
            
        }
        if(txtProgram.getText().length()==txtuser.getText().length())
            {               
                lblwordsNumber.setText((keystrok/5)+"");
                long wordNumber=keystrok/5;
                timeEnd=System.currentTimeMillis()/1000;
                long Elapsidtime=timeEnd-timeStart;
                wordNumber=(wordNumber*60)/Elapsidtime;
                lblTime.setText(Elapsidtime+" Sec");
                lblwpm.setText(wordNumber+"");
                String userResult=wordNumber+"\n";
                activeuser.saveUserResult(userResult);
                JOptionPane.showMessageDialog(rootPane,"Test finish");
                
            }
        
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
       if (txtProgram.getText().length() >= txtuser.getText().length())
       {
            textEnterd = txtuser.getText();
            tmpText = txtProgram.getText().substring(0, textEnterd.length());
            worldlength=textEnterd;
            StyleConstants.setForeground(cwStyle, Color.black);
            doc.setCharacterAttributes(textEnterd.length(), 1, cwStyle, false);
            keystrok=worldlength.length();
            lblkeystrok.setText(keystrok+"");
            Prgbarr.setValue(keystrok);
       }

    }

    @Override
    public void changedUpdate(DocumentEvent e) {

    }
    
    public void ResetItem() throws IOException
    {  //Clean text fields and start a new test
       words=fo.getWords();txtuser.setText(""); 
       txtProgram.setText(words);
       keystrok=0;Prgbarr.setValue(0);   
       Prgbarr.setMinimum(0);
       Prgbarr.setMaximum(words.length());
       timeEnd=0;timeStart=0;  
       lblTime.setText("");lblkeystrok.setText("");
       lblwordsNumber.setText("");lblwpm.setText("");
       txtuser.requestFocus(); 
    }
    
    public Settings readSettingsFromFile(String filename) throws FileNotFoundException, IOException, ClassNotFoundException
    {   File usersFile = new File(filename + ".dat");
        if (usersFile.exists()) 
        {
        FileInputStream fi = new FileInputStream(new File(filename+".dat"));
        ObjectInputStream oi = new ObjectInputStream(fi);
        Settings ws=(Settings)oi.readObject();
        oi.close();
        fi.close();
        return ws;
        }else
            return new Settings();
    }
}
